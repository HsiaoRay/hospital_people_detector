<launch>

<!-- load parameters for mobility aids detector -->
<rosparam file="$(find hospital_people_detector)/config/mobaids_params.yaml" command="load" />

<arg name="arg_camera_height" default="1.0" />
<param name="camera_height" value="$(arg arg_camera_height)" />

<param name="save_images" value="false"/>
<param name="directory_for_images" value="$(find hospital_people_detector)/saved_images/" />

<!-- Camera topics -->
<param name="rgb_image_topic" value="/camera/rgb/image_rect_color" />
<param name="depth_image_topic" value="/camera/depth/image_rect" />
<param name="camera_info_topic" value="/camera/depth/camera_info" />

<!-- Frames -->
<arg name="fixed_frame" default="/odom" />
<arg name="camera_frame" default="/kinect2_depth_optical_frame" />
<arg name="base_frame" default="/base_link" />

<param name="fixed_frame" value="$(arg fixed_frame)" />
<param name="camera_frame" value="$(arg camera_frame)" />
<param name="base_frame" value="$(arg base_frame)" />


<!-- In case of lack of TF you can simulate it -->
<arg name="simulate_tf" default="false" />

<group if="$(arg simulate_tf)">
    <arg name="args_fixed" default="0 0 0 0 0 0 $(arg fixed_frame) $(arg base_frame) 100"/>
    <arg name="args_base" default="0.2 0.0 $(arg arg_camera_height) 0.0 0.1 0.0 $(arg base_frame) /camera_link 100"/>
    <arg name="args_optical" default="0 -0.020 0.0 -0.5 0.5 -0.5 0.5  /camera_link $(arg camera_frame) 100"/>

    <node pkg="tf" type="static_transform_publisher" name="simulate_base_fixed_tf" args="$(arg args_fixed)" />
    <node pkg="tf" type="static_transform_publisher" name="simulate_camera_base_tf" args="$(arg args_base)" />
    <node pkg="tf" type="static_transform_publisher" name="simulate_camera_optical_tf" args="$(arg args_optical)" />
</group>


<!-- Fast R-CNN directories -->
<param name="caffe_directory" value="/home/andres/fast-rcnn/caffe-fast-rcnn" />
<param name="fast_rcnn_directory" value="/home/andres/fast-rcnn" />

<!-- Classifier files -->
<param name="mobaids_prototxt" value="$(find hospital_people_detector)/trained_models/deploy_rgb.prototxt" />
<param name="DepthJet_caffemodel" value="$(find hospital_people_detector)/trained_models/DepthJet.caffemodel" />
<param name="RGB_caffemodel" value="$(find hospital_people_detector)/trained_models/RGB.caffemodel" />

<!-- Run nodes -->
<node pkg="hospital_people_detector" type="proposals_generation" name="proposals_generation" output="screen"/>
<node pkg="hospital_people_detector" type="detection_tracking.py" name="detection_tracking" output="screen"/>

</launch>
